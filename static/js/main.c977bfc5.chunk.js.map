{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/ExpensesFilter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseBlock.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewRxpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","price","onClick","ExpensesFilter","selectYear","setSelectYear","name","onChange","event","target","value","ChartBar","percentage","Math","round","totalValue","style","height","Chart","chartData","items","forEach","item","getMonth","Number","map","showChartBar","ExpenseBlock","setSlectYear","expenses","filter","expenseItem","toString","length","id","ExpenseForm","setPrice","setDate","userInputData","setUserInputData","userInputHandler","prevState","type","clearInputData","onSubmit","preventDefault","expenseData","Date","onSubnmitExpense","min","onCancleAddNewExpense","NewExpense","isStartAddExpense","startAddExpense","onSubnmitExpenseHandler","newExpense","expense","onAddExpense","onAddNewExpenseHandler","onCancelAddNewExpenseHandler","onCancelAddNewExpense","App","setExpensesList","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c977bfc5.chunk.js","sourcesContent":["import \"./Card.css\"\r\n\r\n\r\nconst Card = (props) => {\r\n\r\n\tconst classes = 'Card ' + props.className;\r\n\treturn (\r\n\t\t<div className={classes}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString('en-US', { month: 'long' });\r\n\tconst day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ExpenseDate;","import Card from '../UI/Card.js';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport '../Expenses/ExpenseItem.css';\r\nimport { useState } from 'react';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n\tconst [title, setTitle] = useState(props.title);\r\n\r\n\tconst clickHandle = () => {\r\n\t\tsetTitle('new Title');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className='expense-item'>\r\n\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t<div className='expense-item__description'>\r\n\t\t\t\t<h2> {title}</h2>\r\n\t\t\t\t<div className='expense-item__price'> ${props.price} </div>\r\n\t\t\t</div>\r\n\t\t\t<button onClick={clickHandle}> update </button>\r\n\t\t</Card>\r\n\r\n\t)\r\n}\r\n\r\nexport default ExpenseItem;","import { useState } from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\tconst [selectYear, setSelectYear] = useState(2019);\r\n\r\n\tconst onSelectedHandler = (event) => {\r\n\t\tsetSelectYear(event.target.value);\r\n\t\tprops.selectYear(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\".expenses-filter\">\r\n\t\t\t<div className=\".expenses-filter__control\">\r\n\t\t\t\t<label className=\"expenses-filter label\">Filter By Year</label>\r\n\t\t\t\t<select name=\"selectYear\" onChange={onSelectedHandler} value={selectYear}>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default ExpensesFilter;","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = ( props ) => {\r\n\r\n    let percentage = Math.round((props.value/props.totalValue) * 100) + '%';\r\n    \r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:percentage}}> </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\"> {props.month} </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = ( props ) => {\r\n\r\n    const chartData = [\r\n        { value:0, month:'Jan'},\r\n        { value:0, month:'Feb'},\r\n        { value:0, month:'Mar'},\r\n        { value:0, month:'Apr'},\r\n        { value:0, month:'May'},\r\n        { value:0, month:'Jun'},\r\n        { value:0, month:'Jul'},\r\n        { value:0, month:'Aug'},\r\n        { value:0, month:'Sep'},\r\n        { value:0, month:'Oct'},\r\n        { value:0, month:'Nov'},\r\n        { value:0, month:'Dec'}\r\n    ];\r\n    \r\n    const showChartBar = () => {\r\n        let totalValue = 0;\r\n        props.items.forEach((item)=> {\r\n            chartData[item.date.getMonth()].value += Number(item.price);\r\n            totalValue += Number(item.price);\r\n        })\r\n\r\n        return(\r\n            chartData.map((item => {\r\n                return (\r\n                    <ChartBar\r\n                        key= {item.month}\r\n                        totalValue = {totalValue}\r\n                        value = {item.value}\r\n                        month = {item.month}\r\n                    />\r\n                );\r\n            }))   \r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart\">\r\n            {showChartBar()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import ExpenseItem from \"./ExpenseItem.js\";\r\nimport \"./ExpenseBlock.css\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter.js\";\r\nimport Chart from \"../Chart/Chart.js\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseBlock = (props) => {\r\n\tconst [year, setSlectYear] = useState('2019');\r\n\tlet expenses = props.items.filter(expenseItem => expenseItem.date.getFullYear().toString() === year);\r\n\r\n\tconst onSlectYearHandler = (selectYear) => {\r\n\t\tsetSlectYear(selectYear);\r\n\t}\r\n\r\n\tconst showExpenses = () => {\r\n\t\tif(expenses.length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<li className=\"expenses-list\">\r\n\t\t\t\t\t{expenses.map((expenseItem) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ExpenseItem\r\n\t\t\t\t\t\t\t\tkey={expenseItem.id}\r\n\t\t\t\t\t\t\t\ttitle={expenseItem.title}\r\n\t\t\t\t\t\t\t\tprice={expenseItem.price}\r\n\t\t\t\t\t\t\t\tdate={expenseItem.date}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</li>\t\r\n\t\t\t)\r\n\t\t} else return (\r\n\t\t\t<p className=\"expenses-list__fallback\">No Expenses Found!</p>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className=\"expense-block\">\r\n\t\t\t<Chart \titems={expenses}/>\r\n\t\t\t<ExpensesFilter selectYear={onSlectYearHandler} />\r\n\t\t\t{showExpenses()}\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default ExpenseBlock;","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n\tconst [userInputData, setUserInputData] = useState({\r\n\t\tsetTitle: '',\r\n\t\tsetPrice: '',\r\n\t\tsetDate: ''\r\n\t});\r\n\r\n\tconst userInputHandler = (event) => {\r\n\r\n\t\t/* type A */\r\n\t\t// setUserInputData({\r\n\t\t// \tsetTitle: (event.target.type === 'text') ? event.target.value : userInputData.setTitle,\r\n\t\t// \tsetPrice: (event.target.type === 'number') ? event.target.value : userInputData.setPrice,\r\n\t\t// \tsetDate: (event.target.type === 'date') ? event.target.value : userInputData.setDate\r\n\t\t// });\r\n\r\n\t\t// type B\r\n\t\tsetUserInputData((prevState) => {\r\n\t\t\treturn ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tsetTitle: (event.target.type === 'text') ? event.target.value : userInputData.setTitle,\r\n\t\t\t\tsetPrice: (event.target.type === 'number') ? event.target.value : userInputData.setPrice,\r\n\t\t\t\tsetDate: (event.target.type === 'date') ? event.target.value : userInputData.setDate\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tconst submitHandler = (event) => {\r\n\r\n\t\t// this syntax avoiding refresh whole website again\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: userInputData.setTitle,\r\n\t\t\tprice: userInputData.setPrice,\r\n\t\t\tdate: new Date(userInputData.setDate)\r\n\t\t};\r\n\r\n\t\tprops.onSubnmitExpense(expenseData);\r\n\t\tclearInputData();\r\n\r\n\t}\r\n\r\n\tconst clearInputData = () => {\r\n\t\tsetUserInputData(() => {\r\n\t\t\treturn ({\r\n\t\t\t\tsetTitle: '',\r\n\t\t\t\tsetPrice: '',\r\n\t\t\t\tsetDate: ''\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<div> Title </div>\r\n\t\t\t\t\t<input type=\"text\" value={userInputData.setTitle} onChange={userInputHandler} ></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<div> Price </div>\r\n\t\t\t\t\t<input type=\"number\" value={userInputData.setPrice} min={0} onChange={userInputHandler}></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<div> Date </div>\r\n\t\t\t\t\t<input type=\"date\" value={userInputData.setDate} onChange={userInputHandler}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button onClick={props.onCancleAddNewExpense}>Cancel</button>\r\n\t\t\t\t<button type='submit'> Add </button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\t);\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\n\r\nconst NewExpense = (props) => {\r\n\tconst [isStartAddExpense, startAddExpense] = useState( false );\r\n\tconst onSubnmitExpenseHandler = (newExpense) => {\r\n\t\tlet expense = {\r\n\t\t\t...newExpense,\r\n\t\t\tid: 'test'\r\n\t\t}\r\n\r\n\t\tprops.onAddExpense(expense);\r\n\t\tstartAddExpense(false);\r\n\t}\r\n\r\n\tconst onAddNewExpenseHandler = () => {\r\n\t\tstartAddExpense(true);\r\n\t}\r\n\r\n\tconst onCancelAddNewExpenseHandler = () => {\r\n\t\tstartAddExpense(false);\r\n\t}\r\n\r\n\tconst showExpenseForm = () => {\r\n\t\tif(isStartAddExpense){\r\n\t\t\treturn <ExpenseForm \r\n\t\t\tonSubnmitExpense={onSubnmitExpenseHandler} \r\n\t\t\tonCancelAddNewExpense = {onCancelAddNewExpenseHandler}\r\n\t\t\t/>\r\n\t\t} else {\r\n\t\t\treturn <button className=\"new-expense__actions\" onClick={onAddNewExpenseHandler}>Add New Expense</button>\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t{showExpenseForm()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\r\nimport ExpenseBlock from \"./components/Expenses/ExpenseBlock.js\";\r\nimport NewExpense from \"./components/NewExpense/NewRxpense.js\";\r\n\r\nfunction App() {\r\n\r\n\tconst [expenses, setExpensesList] = useState(\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tid: 'e1',\r\n\t\t\t\ttitle: 'Toilet Paper',\r\n\t\t\t\tprice: 94.12,\r\n\t\t\t\tdate: new Date(2020, 7, 14),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'e2',\r\n\t\t\t\ttitle: 'Toilet',\r\n\t\t\t\tprice: 94.12,\r\n\t\t\t\tdate: new Date(2019, 7, 14),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'e3',\r\n\t\t\t\ttitle: 'Toilet',\r\n\t\t\t\tprice: 20,\r\n\t\t\t\tdate: new Date(2019, 3, 13),\r\n\t\t\t}\r\n\t\t]\r\n\t);\r\n\r\n\tconst onAddExpenseHandler = (newExpense) => {\r\n\t\tsetExpensesList((prevState) => {\r\n\t\t\treturn ([\r\n\t\t\t\t...prevState,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: newExpense.id,\r\n\t\t\t\t\ttitle: newExpense.title,\r\n\t\t\t\t\tprice: newExpense.price.toString(),\r\n\t\t\t\t\tdate: new Date(newExpense.date),\r\n\r\n\t\t\t\t}\r\n\t\t\t])\r\n\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<NewExpense onAddExpense={onAddExpenseHandler} />\r\n\t\t\t<ExpenseBlock items={expenses} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}